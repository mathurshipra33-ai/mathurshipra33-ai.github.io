[
  {
    "name": "NotyStack Android",
    "desc": "Fully fledged android CRUD app based on different design patterns. Built using Java, XML, SQLite, Firebase, RoomDB, MVVM.",
    "image": "notystackandroid",
    "category": "android",
    "links": {
      "view": "https://www.linkedin.com/posts/Shipra-Mathur_androiddev-androidstudio-java-activity-6955224473822199808-JT0j",
      "code": "https://github.com/Shipra-Mathur/notystack-android"
    }
  },
  {
  "name": "Budget Estimation and Institute Prediction of SERB Papers",
  "category": "web",
  "desc": "• Built a dataset by scraping the SERB Prism website using Selenium and Python.<br>• Applied unsupervised learning to classify research papers into various domains and supervised learning to predict budgets and suggest institutes based on user-provided titles.<br>• Developed a tool to assist researchers in estimating budgets and identifying relevant institutions for new project proposals.",
  "links": {
    "view": "https://your-github-link"
  }
},
{
  "name": "Analyzing the Enron Dataset to Identify POI",
  "category": "web",
  "desc": "Developed a predictive model to identify persons of interest (POI) in the Enron dataset using Naive Bayes, SVM, and AdaBoost classifiers. Preprocessed data by cleaning, outlier removal, feature extraction, and synthetic data generation to improve model accuracy. Evaluated classifiers using precision, recall, and F1 score, achieving highest F1 on both real and synthetic datasets using SVM, demonstrating robust fraud detection capabilities.",
  "links": {
    "view": "https://your-github-link"
  }
},
{
  "name": "Social Media Web Application for NITK",
  "category": "web",
  "desc": "• Developed a social media web application using the MERN stack for NITK students.<br>• Users can create profiles using their college email, upload profile pictures, follow/unfollow peers, and view posts on the Home or Followed pages. Features include creating posts with images, liking, commenting, and searching for registered users.<br>• Secured authentication with JWT and hashed passwords stored in MongoDB. Deployed on Heroku with a responsive web UI for seamless accessibility.",
  "image": "socialmedia_nitk",
  "links": {
    "view": "#",
    "code": "#"
}
}

,
{
  "name": "Voice based Navigation for E-commerce website",
  "category": "web",
  "desc": "• Developed an e-commerce website using the MERN stack, adhering to UI/UX principles for an enhanced user experience.<br>• Integrated a custom voice assistant utilizing Speech-to-Text technology with the alan-sdk-web package for voice-based navigation.<br>• Deployed the application on Heroku for live accessibility.",
  "links": {
    "view": "https://your-github-link"
  }
},
{
  "name": "Sharding of D2D Clusters in NS3",
  "category": "web",
  "desc": "Implemented K-means based sharding (clustering) of D2D devices in 5G Mode 1 using NS3 to optimize resource allocation and reduce interference. Calculated SINR for each D2D pair to evaluate quality of service. Simulated 40 D2D devices, 10 cellular users, and 1 eNB tower to study cluster formation and interference management.",
  "links": {
    "view": "https://github.com/username/d2d-clustering-ns3"
  }
}

,
{
  "name": "Attention-based Multimodal Neural Network for Hashtag Recommendation",
  "category": "web",
  "desc": "Built an attention-based multimodal neural network to recommend hashtags for microblogs using text and image features. Text features were extracted using LSTM, image features using VGG CNN with attention, and a parallel co-attention mechanism was applied to combine them. A GRU-based decoder generated the top-5 hashtags, deployed via a Flask webserver.",
  "links": {
    "view": "https://github.com/username/amnn-hashtag-recommendation"
  }
}

,
{
  "name": "Vehicle Detection and Speed Estimation on Highways",
  "category": "web",
  "desc": "• Developed a real-time vehicle tracking and speed detection system using YOLOv3 and SORT (Simple Online Realtime Tracking), achieving high accuracy and efficiency.<br>• Optimized YOLOv3 with pruning algorithms, enhancing detection speed and reducing computational overhead.<br>• Designed a novel speed estimation method using a 'Speed Between Two Lines' approach, ensuring robustness against camera shake.",
  "links": {
    "view": "https://your-github-link"
  }
}
,
{
  "name": "Smart Door Lock using Face-Recognition",
  "desc": "• Developed a face recognition-based application that verifies identity by sending confirmation emails and determines door unlocking status based on user response.<br>• Implemented using Python3 on Jupyter Notebook, leveraging the OpenCV library for face recognition and smtplib for email communication.<br>• Delivered a functional prototype showcasing secure access control through real-time face detection and email-based verification.",
  "image": "smartdoorlock",
  "category": "web",
  "links": {
    "view": "#",
    "code": "#"
  }
},
{
  "name": "Efficient 8-Puzzle Solver Using OpenMP & MPI",
  "category": "web",
  "desc": "• Solved the 8-puzzle problem using sequential BFS algorithm.<br>• Optimized BFS with OpenMP for parallel execution.<br>• Implemented A* algorithm with MPI for distributed computing.<br>• Compared runtime performance across easy, medium, and hard test cases.<br>• Demonstrated improved efficiency while maintaining correctness.",
  "links": {
    "view": "https://your-github-link"
  }
}
,
{
  "name": "Instance Level Image Retrieval at Large Scale",
  "category": "web",
  "desc": "Implemented a large-scale image retrieval system by extracting deep CNN features and converting them into text-like representations using Surrogate Text Representation (STR). Applied Scalar Quantization and Deep Permutations techniques to map features into sparse, indexable text for fast retrieval. Indexed features using a standard text search engine, achieving high MAP of 87.03% on CIFAR4 and demonstrating effective retrieval performance.",
  "links": {
    "view": "https://your-github-link"
  }
}
,
{
  "name": "AutoLecture Companion",
  "category": "web",
  "desc": "• Developed a Python bot that integrates with Google Calendar to automatically join MS Teams meetings and summarize lectures using NLP.<br>• Utilized Google Calendar API to fetch user schedules and Selenium for automating the meeting attendance process.<br>• Implemented Natural Language Processing (NLP) techniques to generate concise lecture summaries.",
  "links": {
    "view": "https://your-github-link"
  }
}

,
{
  "name": "8-Puzzle Problem Solver",
  "category": "web",
  "desc": "• Implemented an 8-puzzle solver using multiple search algorithms: BFS, DFS, and A*.<br>• Designed a flexible algorithmic framework allowing selection of different heuristics for A* search.<br>• Visualized the step-by-step puzzle solution path and explored performance differences between algorithms.<br>• Optimized state space representation to minimize memory usage and improve search efficiency.",
  "links": {
    "view": "https://your-github-link"
  }
}

,
  {
  "name": "Tic Tac Toe",
  "category": "web",
  "desc": "Classic Tic Tac Toe game built in Android Studio.<br>• Two-player mode<br>• AI opponent with basic difficulty<br>• Responsive layouts for phones and tablets<br>• Win/tie detection<br>• Reset button and score tracking<br>• Material Design-inspired UI<br>• Intuitive touch controls",
  "links": {
    "view": "https://your-github-or-playstore-link"
  }
}


,
  {
    "name": "Portfolio Website",
    "desc": "Personal portfolio website to showcase my skills, projects and experience. Built using HTML, CSS, JavaScript and React.js.",
    "image": "portfolio",
    "category": "web",
    "links": {
      "view": "https://shipra-mathur.github.io/portfolio-shipra/",
      "code": ""
    }
  }
]
